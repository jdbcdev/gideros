include $(dir $(abspath $(lastword $(MAKEFILE_LIST))))/Makefile.def

QT=$(QTBASEDIR)/$(QTVER)/$(QT_ARCH)
PATH:=$(QT)/bin:$(QTBASEDIR)/Tools/$(QT_TOOLSARCH)/bin:$(PATH):
JAR=$(JAVA_HOME)/bin/jar
ANT=export JAVA_HOME=$(JAVA_HOME); export ANDROID_HOME=$(ANDROID_HOME); $(JAVA_HOME)/bin/java -classpath "$(ANT_HOME)\\lib\\ant-launcher.jar" "-Dant.home=$(ANT_HOME)" org.apache.tools.ant.launch.Launcher

#DEFS
PLUGINS_DEFAULT=bitop lsqlite3 luasocket lfs json googlebilling iad gamekit storekit microphone
PLUGINS_ALL=bitop lsqlite3 luasocket lpeg lfs json microphone gmedia
PLUGINS_WIN=$(PLUGINS_ALL) clipper struct controller
PLUGINS_ANDROID=$(PLUGINS_ALL) ads clipper controller countly Facebook flurry gaming giftiz googlebilling \
				googlelicensing googleplay iab native notification storedetector \
				struct
ROOT=.
SDK=$(ROOT)/Sdk
GIDEROS_VERSION:=$(shell grep GIDEROS_VERSION $(ROOT)/libgideros/gideros.h | grep define | sed 's/^[^"]*"\([^"]*\)"/\1/')

#TOOLS
QMAKE=qmake

CC=$(QTBASEDIR)/Tools/$(QT_TOOLSARCH)/bin/gcc
CXX=$(QTBASEDIR)/Tools/$(QT_TOOLSARCH)/bin/g++

ifeq ($(OS),Windows_NT)
RELEASE=$(ROOT)/Build.Win
all: qtapp.install android.install winrt.install #win32.install 

clean: qtapp.clean android.clean win32.clean winrt.clean
	rm -rf $(RELEASE)
else
RELEASE=$(ROOT)/Build.Mac
all: qtapp.install ios.install

clean: qtapp.clean ios.clean
	rm -rf $(RELEASE)
endif

#SDK includes
vpath %.h libgideros:libgvfs:libgid/include:lua/src:libgid/external/openal-soft-1.13/include/AL
$(SDK)/include/%: %
	cp $^ $(SDK)/include

$(SDK)/include/AL/%: %
	cp $^ $(SDK)/include/AL

SDK_INCS=$(addsuffix .h,gideros gplugin gproxy greferenced gexport) \
			$(addsuffix .h,gfile gpath gstdio) \
			$(addsuffix .h,gglobal glog gapplication gevent) \
			$(addsuffix .h,lua luaconf lualib lauxlib) \
			$(addprefix AL/,$(addsuffix .h,al alc alext efx efx-creative))

sdk.headers.dir:
	mkdir -p $(SDK)/include/AL

sdk.headers: sdk.headers.dir $(addprefix $(SDK)/include/,$(SDK_INCS))

%.plugin.install:
	@mkdir -p $(RELEASE)/All\ Plugins/$(notdir $*)
	@for f in $(ROOT)/plugins/$*/*.gplugin; do if [ -f "$$f" ]; then cp $$f $(RELEASE)/All\ Plugins/$(notdir $*); fi; done


include $(dir $(abspath $(lastword $(MAKEFILE_LIST))))/GidGeneric.mk
ifeq ($(OS),Windows_NT)
MINGWMAKE=$(MAKE)
include $(dir $(abspath $(lastword $(MAKEFILE_LIST))))/GidQtWin.mk
include $(dir $(abspath $(lastword $(MAKEFILE_LIST))))/GidWin32.mk
include $(dir $(abspath $(lastword $(MAKEFILE_LIST))))/GidAndroid.mk
include $(dir $(abspath $(lastword $(MAKEFILE_LIST))))/GidWinRT.mk
include $(dir $(abspath $(lastword $(MAKEFILE_LIST))))/GidPkg.mk
else
include $(dir $(abspath $(lastword $(MAKEFILE_LIST))))/GidQtMac.mk
include $(dir $(abspath $(lastword $(MAKEFILE_LIST))))/GidiOS.mk
endif


		